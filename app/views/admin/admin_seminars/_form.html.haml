= form_for @seminar, url: admin_admin_seminar_path(@seminar), builder: BulmaDoubleFormBuilder do |f|
  = f.errors

  .box
    %h2.subtitle.has-text-centered
      %span.icon
        %i.fa.fa-star
      = t('seminar.form.section.publication')
      %span.icon
        %i.fa.fa-star
    = f.double_text_input :title, "copy"
    = f.double_text_input :subtitle, "copy"
    = f.double_text_area :description, "copy", size: 12

  .box
    %h2.subtitle.has-text-centered
      %span.icon
        %i.fa.fa-calendar
      = t('seminar.form.section.dates')
      %span.icon
        %i.fa.fa-calendar
    = f.double_datetime_select :start_date
    = f.double_datetime_select :end_date
    = f.double_select :seminar_kind_id, SeminarKind.where(active: true), :id, :name
    = f.double_text_area :alternative_dates, "copy", size: 5
    -#icon: 'fa-calendar', help_text: t('seminar.helptext.alternative_dates')
    = f.double_number_field  "cancellation_time", "copy"
    -#icon: 'fa-calendar', help_text: t('seminar.helptext.cancellation_time')

    = f.double_text_input "cancellation_reason", "copy"

  .box
    %h2.subtitle.has-text-centered
      %span.icon
        %i.fa.fa-users
      = t('seminar.form.section.participants')
      %span.icon
        %i.fa.fa-users
    = f.double_number_field :attendees_minimum, "copy"
    -# icon: 'fa-window-minimize'
    = f.double_number_field :attendees_maximum, "copy"
    -# icon: 'fa-window-maximize'
    = f.double_text_input :accommodation, "copy"
    -#icon: 'fa-home', help_text: t('seminar.helptext.accommodation')
    = f.double_text_input "attendees_preconditions", "copy"
    = f.double_text_input "please_bring", "copy"
    -#, icon: 'fa-suitcase'

  .box
    %h2.subtitle.has-text-centered
      %span.icon
        %i.fa.fa-sitemap
      = t('seminar.form.section.infrastructure')
      %span.icon
        %i.fa.fa-sitemap
    = f.double_select "wished_room", Room.where(active: true), :id, :name
    = f.double_text_area "room_comment", "copy", size: 3
    = f.double_text_input "room_material", "copy"
    -#icon: 'fa-clipboard'
    = f.double_text_input "room_extras", "copy"
    -# icon: 'fa-wrench'

  .box
    %h2.subtitle.has-text-centered
      %span.icon
        %i.fa.fa-money
      = t('seminar.form.section.costs')
      %span.icon
        %i.fa.fa-money
    = f.double_text_input "royalty_participant", "copy"
    = f.double_text_input "royalty_participant_reduced", "copy"
    = f.double_text_input "material_cost", "copy"

  .box
    %h2.subtitle.has-text-centered
      %span.icon
        %i.fa.fa-user-circle
      = t('seminar.form.section.main_referee')
      %span.icon
        %i.fa.fa-user-circle
    #instructors
      = f.fields_for :seminar_instructors do |instructor|
        = render 'seminars/seminar_instructor_fields', f: instructor
      .links
        = link_to_add_association t('seminar_instructors.add'), f, :seminar_instructors, partial: 'seminars/seminar_instructor_fields', class: 'button', wrap_object: Proc.new {|instructor| instructor.email = current_user.email; instructor }

    %hr

    = render 'seminars/instructors/table', seminar: @seminar.user_seminar, subheading: t('admin.seminar.referees_from_original')

  -#= f.file_field :files, multiple: true
  - if @seminar.user_seminar.files.attached?
    .box
      %table.table.is-fullwidth
        %tbody
          %tr
            %th(colspan=1)
              %h2.subtitle
                %span.icon
                  %i.fa.fa-file
                = t('seminar.files')
                = t('seminar.of_original')
          - if @seminar.user_seminar.files.empty?
            %tr
              %td.is-warning= t(:none)
          - else
            %tr
              %td
                .columns.is-multiline
                  - @seminar.user_seminar.files.each do |file|
                    .column.is-2
                      = link_to file.filename, url_for(file), target: '_new'
                      - if file.blob.content_type.start_with? 'image'
                        = link_to url_for(file), target: '_new' do
                          = image_tag file.variant(resize: "180x100").processed

  = f.submit
