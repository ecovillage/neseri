= form_for @seminar, builder: BulmaFormBuilder::HorizontalBulmaFormBuilder do |f|
  = f.errors

  .box
    %h2.subtitle.has-text-centered
      %span.icon
        %i.fa.fa-star
      = t('seminar.form.section.publication')
      %span.icon
        %i.fa.fa-star
    = f.labeled_text_field :title, placeholder: t('seminar.placeholder.title')
    = f.labeled_text_field :subtitle, placeholder: t('seminar.placeholder.subtitle')
    = f.labeled_text_area "description", help_text: t('seminar.helptext.description')

  .box
    %h2.subtitle.has-text-centered
      %span.icon
        %i.fa.fa-calendar
      = t('seminar.form.section.dates')
      %span.icon
        %i.fa.fa-calendar
    = f.labeled_datetime_select "start_date", help_text: t('seminar.helptext.start_date')
    = f.labeled_datetime_select "end_date", help_text: t('seminar.helptext.end_date')
    = f.labeled_collection_select "seminar_kind_id", SeminarKind.where(active: true), :id, :name
    = f.labeled_text_area "alternative_dates", icon: 'fa-calendar', help_text: t('seminar.helptext.alternative_dates')
    = f.labeled_number_field "cancellation_time", icon: 'fa-calendar', help_text: t('seminar.helptext.cancellation_time')
    = f.labeled_text_field "cancellation_reason"
  
  .box
    %h2.subtitle.has-text-centered
      %span.icon
        %i.fa.fa-users
      = t('seminar.form.section.participants')
      %span.icon
        %i.fa.fa-users
    = f.labeled_number_field "attendees_minimum", help_text: t('seminar.helptext.attendees_minimum'), icon: 'fa-window-minimize'
    = f.labeled_number_field "attendees_maximum", icon: 'fa-window-maximize'
    = f.labeled_text_field "accommodation", icon: 'fa-home', help_text: t('seminar.helptext.accommodation')
    = f.labeled_text_field "attendees_preconditions"
    = f.labeled_text_field "please_bring", icon: 'fa-suitcase'
  
  
  .box
    %h2.subtitle.has-text-centered
      %span.icon
        %i.fa.fa-sitemap
      = t('seminar.form.section.infrastructure')
      %span.icon
        %i.fa.fa-sitemap
    = f.labeled_collection_select "room_wish_id", Room.where(active: true), :id, :name
    = f.labeled_text_area "room_comment", size: 3
    = f.labeled_text_field "room_material", help_text: t('seminar.helptext.room_material'), icon: 'fa-clipboard'
    = f.labeled_text_field "room_extras", help_text: t('seminar.helptext.room_extras'), icon: 'fa-wrench'
  
  .box
    %h2.subtitle.has-text-centered
      %span.icon
        %i.fa.fa-money
      = t('seminar.form.section.costs')
      %span.icon
        %i.fa.fa-money

    .field.is-horizontal
      .field-label.is-normal
        %label.label(for="seminar_cost_participant")
          Seminarkosten für Teilnehmer*in
      .field-body
        .field.is-expanded
          %p.control.is-expanded
            %input#seminar_cost_participant.input.control.is-expanded(type="text" name="seminar[cost_participant]" value="#{(@seminar.royalty_participant.to_f/0.67).to_i}")
          %p.help
            in Euro
        .field.is-expanded
          %p.is-expanded
            x 0.67
        .field.is-expanded
          %p.control.is-expanded
            %input#seminar_royalty_participant.input.control.is-expanded(type="text" name="seminar[royalty_participant]" readonly=true value="#{@seminar.royalty_participant}")
          %p.help
            Honorar in Euro
        .field-label.is-normal
          %label.label(for="seminar_royalty_participant")
            Honorar pro Teilnehmer*in
    -# Came from this markup:
    -#= f.labeled_text_field "royalty_participant", help_text: t('seminar.helptext.royalty_participant')
    :javascript
      costInputElement = document.getElementById('seminar_cost_participant');
      royaltyElement   = document.getElementById("seminar_royalty_participant");

      function setSeminarCost() {
        cost = parseFloat(costInputElement.value.replace(',','.').replace(' ',''))
        royaltyElement.value = Math.round(cost * 0.67)
      }

      costInputElement.oninput = setSeminarCost

    .field.is-horizontal
      .field-label.is-normal
        %label.label(for="seminar_cost_participant_reduced")
          Ermäßigte Seminarkosten für Teilnehmer*in
      .field-body
        .field.is-expanded
          %p.control.is-expanded
            %input#seminar_cost_participant_reduced.input.control.is-expanded(type="text" name="seminar[cost_participant_reduced]" value="#{(@seminar.royalty_participant_reduced.to_f/0.67).to_i}")
          %p.help
            für Teilnehmer*innen, die auch vom FK Sozialermäßigung erhalten. Höchstens 2/3 des normalen Honorars.
        .field.is-expanded
          %p.is-expanded
            x 0.67
        .field.is-expanded
          %p.control.is-expanded
            %input#seminar_royalty_participant_reduced.input.control.is-expanded(type="text" name="seminar[royalty_participant_reduced]" readonly=true value="#{@seminar.royalty_participant_reduced}")
          %p.help
            Honorar in Euro
        .field-label.is-normal
          %label.label(for="seminar_royalty_participant_reduced")
            Honorar pro ermäßigte*m Teilnehmer*in
    -# Came from this markup
    -#= f.labeled_text_field "royalty_participant_reduced", help_text: t('seminar.helptext.royalty_participant_reduced')
    :javascript
      costReducedInputElement = document.getElementById('seminar_cost_participant_reduced');
      royaltyReducedElement   = document.getElementById("seminar_royalty_participant_reduced");

      function setSeminarCostReduced() {
        cost = parseFloat(costReducedInputElement.value.replace(',','.').replace(' ',''))
        royaltyReducedElement.value = Math.round(cost * 0.67)
      }

      costReducedInputElement.oninput = setSeminarCostReduced

    = f.labeled_text_field "material_cost"
    -#= f.labeled_string "kind", default: "user"
    -#= f.labeled_string "uuid"

  .box
    %h2.subtitle.has-text-centered
      %span.icon
        %i.fa.fa-user-circle
      = t('seminar.form.section.main_referee')
      %span.icon
        %i.fa.fa-user-circle
    #instructors
      = f.fields_for :seminar_instructors do |instructor|
        = render 'seminars/seminar_instructor_fields', f: instructor
      .links
        = link_to_add_association t('seminar_instructors.add'), f, :seminar_instructors, partial: 'seminars/seminar_instructor_fields', class: 'button', wrap_object: Proc.new {|instructor| instructor.email = current_user.email; instructor }

  .box
    %h2.subtitle.has-text-centered
      %span.icon
        %i.fa.fa-file
      = t('seminar.files')
      %span.icon
        %i.fa.fa-file
    %p
      = t("seminar.files_text_html")
      %br
    %p
      %br
      %ul
        %li
          - @seminar.files.each do |file|
            = link_to file.filename, url_for(file)

      %br
      = f.file_field :files, multiple: true


  .box
    %h2.subtitle.has-text-centered
      %span.icon
        %i.fa.fa-umbrella
      = t('seminar.form.section.conditions')
      %span.icon
        %i.fa.fa-umbrella
    %p
      = t("seminar.conditions_text_html")
      %br
      %br
      .field.is-horizontal
        .field-label.is-normal
        .field-body
          .control.button.is-outlined
            = f.check_box :accept_conditions
            &nbsp;
            %b
              = f.label :accept_conditions


  .level
    .level-item-left
      = f.submit
    .level-item-right
      - if @seminar.persisted?
        = button_link_to "fa-delete", seminar_path(@seminar), t('seminar.pull_back'), 'is-danger', method: :delete
